/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author achala
 */
public class Item extends javax.swing.JFrame {

    /**
     * Creates new form Patient
     */
    public Item() {
        initComponents();
        Connect();
        PID();
        itable();
    }
    
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    
    
    
    public void Connect(){
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/chanelcenter", "root","");
                    
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }
    
    public void PID(){
        try {
            Statement s = con.createStatement();
            rs = s.executeQuery("select MAX(itemid) from item");
            rs.next();
            rs.getString("MAX(itemid)");
            
            if(rs.getString("MAX(itemid)")== null){
                lblitemid.setText("I001");
            }
            else{
                long id = Long.parseLong(rs.getString("MAX(itemid)").substring(2,rs.getString("MAX(itemid)").length()));
                id++;
                lblitemid.setText("I"+String.format("%03d", id));
            }
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Item.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void itable(){
        try {
            pst = con.prepareStatement("select * from item");
            
            rs = pst.executeQuery();
        
        ResultSetMetaData Rsm = rs.getMetaData();
        int c = Rsm.getColumnCount();
        
        DefaultTableModel df = (DefaultTableModel)ITEMdetails.getModel();
        df.setRowCount(0);
        
        while(rs.next()){
            Vector v2 = new Vector();
            
            for(int i=1;i<=c;i++){
                
            
            v2.add(rs.getString("itemid"));
            v2.add(rs.getString("itemname"));
            v2.add(rs.getString("description"));
            v2.add(rs.getString("sellprice"));
            v2.add(rs.getString("buyprice"));
            v2.add(rs.getString("qty"));
            
            }
            df.addRow(v2);
        }
        
        } catch (SQLException ex) {
            Logger.getLogger(Item.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        no = new javax.swing.JLabel();
        contactTAG = new javax.swing.JLabel();
        nameTAG = new javax.swing.JLabel();
        txtname = new javax.swing.JFormattedTextField();
        txtdes = new javax.swing.JFormattedTextField();
        lblitemid = new javax.swing.JLabel();
        contactTAG1 = new javax.swing.JLabel();
        contactTAG2 = new javax.swing.JLabel();
        contactTAG3 = new javax.swing.JLabel();
        txtsellprice = new javax.swing.JFormattedTextField();
        txtbuyprice = new javax.swing.JFormattedTextField();
        txtqty = new javax.swing.JFormattedTextField();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        delet = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ITEMdetails = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Create Item");

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        no.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        no.setText("Item ID");

        contactTAG.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        contactTAG.setText("Description");

        nameTAG.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        nameTAG.setText("Item Name");

        txtname.setPreferredSize(new java.awt.Dimension(5, 20));
        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });

        txtdes.setPreferredSize(new java.awt.Dimension(5, 20));
        txtdes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdesActionPerformed(evt);
            }
        });

        lblitemid.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblitemid.setForeground(new java.awt.Color(255, 51, 51));
        lblitemid.setText("jLabel1");

        contactTAG1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        contactTAG1.setText("Sell Price");

        contactTAG2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        contactTAG2.setText("Buy Price");

        contactTAG3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        contactTAG3.setText("Qty");

        txtsellprice.setPreferredSize(new java.awt.Dimension(5, 20));
        txtsellprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsellpriceActionPerformed(evt);
            }
        });

        txtbuyprice.setPreferredSize(new java.awt.Dimension(5, 20));
        txtbuyprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbuypriceActionPerformed(evt);
            }
        });

        txtqty.setPreferredSize(new java.awt.Dimension(5, 20));
        txtqty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtqtyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(contactTAG3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtqty, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(contactTAG2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtbuyprice, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(contactTAG1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtsellprice, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameTAG)
                            .addComponent(no))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblitemid)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(contactTAG)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtdes, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(no)
                    .addComponent(lblitemid))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nameTAG)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contactTAG)
                    .addComponent(txtdes, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contactTAG1)
                    .addComponent(txtsellprice, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contactTAG2)
                    .addComponent(txtbuyprice, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contactTAG3)
                    .addComponent(txtqty, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59))
        );

        add.setBackground(new java.awt.Color(255, 255, 255));
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(255, 255, 255));
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        exit.setBackground(new java.awt.Color(255, 255, 255));
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        delet.setBackground(new java.awt.Color(255, 255, 255));
        delet.setText("Delet");
        delet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel1.setText("Create Item");

        ITEMdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item NO", "Item Name", "Description", "Sell Price", "Buy Price", "Qty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ITEMdetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ITEMdetailsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ITEMdetails);
        if (ITEMdetails.getColumnModel().getColumnCount() > 0) {
            ITEMdetails.getColumnModel().getColumn(0).setMinWidth(2);
            ITEMdetails.getColumnModel().getColumn(0).setPreferredWidth(5);
            ITEMdetails.getColumnModel().getColumn(1).setPreferredWidth(20);
            ITEMdetails.getColumnModel().getColumn(2).setPreferredWidth(10);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(delet, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(304, 304, 304))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delet, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void txtdesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdesActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed

        // TODO add your handling code here:
        //Login.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));
        String ID = lblitemid.getText();
        String name = txtname.getText();
        String des = txtdes.getText();
        String sell = txtsellprice.getText();
        String buy = txtbuyprice.getText();
        String qty = txtqty.getText();
        

        
        try {
            pst = con.prepareStatement("insert into item(itemid,itemname,description,sellprice,buyprice,qty)values(?,?,?,?,?,?)");
            
            pst.setString(1, ID);
            pst.setString(2, name);
            pst.setString(3, des);
            pst.setString(4, sell);
            pst.setString(5, buy);
            pst.setString(6, qty);
            
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Item Inserted Successfully!");
            
            PID();
           
            
            txtname.setText("");
            txtdes.setText("");
            txtsellprice.setText("");
            txtbuyprice.setText("");
            txtqty.setText("");
            
            txtname.requestFocus();
            
            itable();
            
        } catch (SQLException ex) {
            Logger.getLogger(Item.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        
        
        
        String name = txtname.getText();
        String des = txtdes.getText();
        String sell = txtsellprice.getText();
        String buy = txtbuyprice.getText();
        String qty = txtqty.getText();
        String ID = lblitemid.getText();
        
        
        try {
            pst = con.prepareStatement("update item set itemname = ?,description = ?,sellprice = ?,buyprice = ?,qty = ? where itemid = ?");
            
            
            pst.setString(1, name);
            pst.setString(2, des);
            pst.setString(3, sell);
            pst.setString(4, buy);
            pst.setString(5, qty);
            pst.setString(6, ID);
            
            
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Item Updated Successfully!");
            
            PID();
           
            
            txtname.setText("");
            txtdes.setText("");
            txtsellprice.setText("");
            txtbuyprice.setText("");
            txtqty.setText("");
            
            txtname.requestFocus();
            

            itable();
            add.setEnabled(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_updateActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_exitActionPerformed

    private void deletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletActionPerformed
        // TODO add your handling code here:
        
        String ID = lblitemid.getText();
        
        try {
            pst = con.prepareStatement("delete from item where itemid = ?");
            
            
            pst.setString(1, ID);
            
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Item Deleted Successfully!");
            
            PID();
           
            
            txtname.setText("");
            txtdes.setText("");
            txtsellprice.setText("");
            txtbuyprice.setText("");
            txtqty.setText("");
            

            itable();
            add.setEnabled(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(Item.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deletActionPerformed

    private void ITEMdetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ITEMdetailsMouseClicked
        // TODO add your handling code here:
        DefaultTableModel d1 = (DefaultTableModel)ITEMdetails.getModel();
        int SelectIndex = ITEMdetails.getSelectedRow();
        
        lblitemid.setText(d1.getValueAt(SelectIndex, 0).toString());
        txtname.setText(d1.getValueAt(SelectIndex, 1).toString());
        txtdes.setText(d1.getValueAt(SelectIndex, 2).toString());
        txtsellprice.setText(d1.getValueAt(SelectIndex, 3).toString());
        txtbuyprice.setText(d1.getValueAt(SelectIndex, 4).toString());
        txtqty.setText(d1.getValueAt(SelectIndex, 5).toString());

        
        add.setEnabled(false);
    }//GEN-LAST:event_ITEMdetailsMouseClicked

    private void txtsellpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsellpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsellpriceActionPerformed

    private void txtbuypriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbuypriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbuypriceActionPerformed

    private void txtqtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtqtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtqtyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Item().setVisible(true);
           }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ITEMdetails;
    private javax.swing.JButton add;
    private javax.swing.JLabel contactTAG;
    private javax.swing.JLabel contactTAG1;
    private javax.swing.JLabel contactTAG2;
    private javax.swing.JLabel contactTAG3;
    private javax.swing.JButton delet;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblitemid;
    private javax.swing.JLabel nameTAG;
    private javax.swing.JLabel no;
    private javax.swing.JFormattedTextField txtbuyprice;
    private javax.swing.JFormattedTextField txtdes;
    private javax.swing.JFormattedTextField txtname;
    private javax.swing.JFormattedTextField txtqty;
    private javax.swing.JFormattedTextField txtsellprice;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
